CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `transaction_summary_view`  AS WITH pg_fee_cte AS (SELECT `t`.`transaction_id` AS `transaction_id`, CASE WHEN `t`.`payment` in ('paymaya_credit_card','maya','maya_checkout','paymaya','gcash','gcash_miniapp') THEN (select coalesce((select `fh`.`old_value` from `fee_history` `fh` where `fh`.`fee_id` = `f`.`fee_id` and `fh`.`column_name` = `t`.`payment` and `fh`.`changed_at` >= `t`.`transaction_date` order by `fh`.`changed_at` desc limit 1),case `t`.`payment` when 'paymaya_credit_card' then `f`.`paymaya_credit_card` when 'gcash' then `f`.`gcash` when 'gcash_miniapp' then `f`.`gcash_miniapp` when 'paymaya' then `f`.`paymaya` when 'maya_checkout' then `f`.`maya_checkout` when 'maya' then `f`.`maya` end)) WHEN `t`.`payment` is null THEN 0 END AS `pg_fee_rate`, coalesce((select `fh`.`old_value` from `fee_history` `fh` where `fh`.`fee_id` = `f`.`fee_id` and `fh`.`column_name` = 'commission_type' and `fh`.`changed_at` >= `t`.`transaction_date` order by `fh`.`changed_at` desc limit 1),`f`.`commission_type`) AS `commission_type`, coalesce((select `fh`.`old_value` from `fee_history` `fh` where `fh`.`fee_id` = `f`.`fee_id` and `fh`.`column_name` = 'lead_gen_commission' and `fh`.`changed_at` >= `t`.`transaction_date` order by `fh`.`changed_at` desc limit 1),`f`.`lead_gen_commission`) AS `commission_rate` FROM (((`transaction` `t` join `store` `s` on(`t`.`store_id` = `s`.`store_id`)) join `merchant` `m` on(`m`.`merchant_id` = `s`.`merchant_id`)) join `fee` `f` on(`f`.`merchant_id` = `m`.`merchant_id`)))  SELECT substr(`t`.`transaction_id`,1,8) AS `Transaction ID`, `t`.`transaction_date` AS `Transaction Date`, `m`.`merchant_id` AS `Merchant ID`, `m`.`merchant_name` AS `Merchant Name`, `s`.`store_id` AS `Store ID`, `s`.`store_name` AS `Store Name`, `t`.`customer_id` AS `Customer ID`, `t`.`customer_name` AS `Customer Name`, `p`.`promo_code` AS `Promo Code`, `p`.`voucher_type` AS `Voucher Type`, `p`.`promo_category` AS `Promo Category`, `p`.`promo_group` AS `Promo Group`, `p`.`promo_type` AS `Promo Type`, `t`.`gross_amount` AS `Gross Amount`, `t`.`discount` AS `Discount`, `t`.`amount_discounted` AS `Cart Amount`, `t`.`payment` AS `Payment`, `t`.`bill_status` AS `Bill Status`, `t`.`comm_rate_base` AS `Comm Rate Base`, `pg_fee_cte`.`commission_type` AS `Commission Type`, concat(`pg_fee_cte`.`commission_rate`,'%') AS `Commission Rate`, round(`t`.`comm_rate_base` * (`pg_fee_cte`.`commission_rate` / 100),2) AS `Commission Amount`, CASE WHEN `pg_fee_cte`.`commission_type` = 'Vat Exc' THEN round(`t`.`comm_rate_base` * (`pg_fee_cte`.`commission_rate` / 100) * 1.12,2) WHEN `pg_fee_cte`.`commission_type` = 'Vat Inc' THEN round(`t`.`comm_rate_base` * (`pg_fee_cte`.`commission_rate` / 100),2) END AS `Total Billing`, concat(`pg_fee_cte`.`pg_fee_rate`,'%') AS `PG Fee Rate`, round(`t`.`amount_discounted` * (`pg_fee_cte`.`pg_fee_rate` / 100),2) AS `PG Fee Amount`, round(`t`.`amount_discounted` - case when `pg_fee_cte`.`commission_type` = 'Vat Exc' then round(`t`.`comm_rate_base` * (`pg_fee_cte`.`commission_rate` / 100) * 1.12,2) when `pg_fee_cte`.`commission_type` = 'Vat Inc' then round(`t`.`comm_rate_base` * (`pg_fee_cte`.`commission_rate` / 100),2) end - round(`t`.`amount_discounted` * (`pg_fee_cte`.`pg_fee_rate` / 100),2),2) AS `Amount to be Disbursed` FROM (((((`transaction` `t` join `store` `s` on(`t`.`store_id` = `s`.`store_id`)) join `merchant` `m` on(`m`.`merchant_id` = `s`.`merchant_id`)) join `promo` `p` on(`p`.`promo_code` = `t`.`promo_code`)) join `fee` `f` on(`f`.`merchant_id` = `m`.`merchant_id`)) join `pg_fee_cte` on(`t`.`transaction_id` = `pg_fee_cte`.`transaction_id`)) ORDER BY `t`.`transaction_date` ASC `transaction_date`;